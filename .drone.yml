---
kind: pipeline
type: kubernetes
name: default

environment:
  GOCACHE: /cache/pkg/cache
  GOMODCACHE: /cache/pkg/mod

services:
  - name: database
    image: mysql:8.0
    ports:
      - 3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: monitor_test
      MYSQL_USER: monitor
      MYSQL_PASSWORD: test123
    detach: true
    resources:
      limits:
        cpu: 1000
        memory: 2048MiB

steps:
  - name: fetch-tags
    image: alpine/git
    commands:
      - git fetch --tags
    resources:
      requests:
        cpu: 250
        memory: 50MiB
      limits:
        cpu: 250
        memory: 100MiB

  - name: test
    image: golang:1.25
    pull: always
    volumes:
      - name: go
        path: /go
      - name: gopkg
        path: /cache
    commands:
      - apt update && apt install -y default-mysql-client git
      - |
        echo "Waiting for database to be ready..."
        for i in $(seq 1 30); do
          if mysql -h database -u monitor -ptest123 --ssl-verify-server-cert=false -e "SELECT 1" monitor_test 2>/dev/null; then
            echo "Database is ready!"
            break
          fi
          echo "Waiting for database... ($i/30)"
          sleep 2
        done
      - mysql -h database -u monitor -ptest123 --ssl-verify-server-cert=false monitor_test < schema.sql
      - go build ./...
      - go test -v ./... -short
      - make test-integration
      - echo OK
    environment:
      TEST_DATABASE_URL: "monitor:test123@tcp(database:3306)/monitor_test?parseTime=true&multiStatements=true"
    resources:
      requests:
        cpu: 1000
        memory: 128MiB
      limits:
        cpu: 2000
        memory: 2GiB

  - name: goreleaser
    image: golang:1.25
    resources:
      requests:
        cpu: 6000
        memory: 2GiB
      limits:
        cpu: 6000
        memory: 8GiB
    volumes:
      - name: go
        path: /go
      - name: gopkg
        path: /cache
    environment:
      GITHUB_TOKEN:
        from_secret: GITHUB_TOKEN
    commands:
      # - go env
      # curl -sf https://goreleaser.com/static/latest
      - apt update && apt install -y git
      - ./scripts/run-goreleaser
      - echo Done
    depends_on: [test]

  - name: docker
    image: harbor.ntppool.org/ntppool/drone-kaniko:main
    pull: always
    settings:
      repo: ntppool/monitor-api
      registry: harbor.ntppool.org
      tags: "${DRONE_BRANCH},build-${DRONE_BUILD_NUMBER},SHAABBREV,SHA7"
      auto_tag: true
      cache: true
      username:
        from_secret: harbor_username
      password:
        from_secret: harbor_password
    depends_on: [goreleaser]

  - name: upload
    image: plugins/s3
    resources:
      requests:
        cpu: 250
        memory: 64MiB
      limits:
        cpu: 250
        memory: 256MiB
    settings:
      access_key:
        from_secret: s3_access_key
      secret_key:
        from_secret: s3_secret_key
      bucket: geodns
      target: /ntppool-agent/builds/test/${DRONE_BUILD_NUMBER}
      source: dist/*
      strip_prefix: dist/
      endpoint: https://minio-ewr1.develooper.com/
      path_style: true
    when:
      ref:
        - refs/heads/main
        - refs/tags/*
    depends_on: [goreleaser]

  - name: fury-publish
    image: golang:1.25
    resources:
      requests:
        cpu: 250
        memory: 64MiB
      limits:
        cpu: 250
        memory: 256MiB
    environment:
      FURY_TOKEN:
        from_secret: fury_test_token
    commands:
      - ./scripts/fury-publish ntppool-test
    when:
      ref:
        - refs/heads/main
        - refs/tags/*
    depends_on: [goreleaser]

volumes:
  - name: go
    temp: {}
  - name: gopkg
    claim:
      name: go-pkg

trigger:
  event:
    - custom
    - push
    - tag
    - pull_request

---
kind: pipeline
type: kubernetes
name: publish-production

steps:
  - name: download
    image: registry.fedoraproject.org/fedora:42 # curl version 7.83 or later
    commands:
      - ./scripts/download-release ntppool-agent test/${DRONE_BUILD_PARENT} dist/
    resources:
      requests:
        cpu: 250
        memory: 64MiB
      limits:
        cpu: 250
        memory: 256MiB

  - name: upload
    image: plugins/s3
    resources:
      requests:
        cpu: 250
        memory: 64MiB
      limits:
        cpu: 250
        memory: 256MiB
    settings:
      access_key:
        from_secret: s3_access_key
      secret_key:
        from_secret: s3_secret_key
      bucket: geodns
      target: /ntppool-agent/builds/release/${DRONE_BUILD_PARENT}
      source: dist/*
      strip_prefix: dist/
      endpoint: https://minio-ewr1.develooper.com/
      path_style: true
    depends_on: ["download"]

  - name: fury-publish
    image: golang:1.25
    resources:
      requests:
        cpu: 250
        memory: 64MiB
      limits:
        cpu: 250
        memory: 256MiB
    environment:
      FURY_TOKEN:
        from_secret: fury_token
    commands:
      - ./scripts/fury-publish ntppool
    depends_on: ["download"]

trigger:
  event:
    - promote
  target:
    - publish
---
kind: signature
hmac: 33044cb2318d835a3d4d7c206d75d8eefe121405df99741f811c5f57f2470677

...
